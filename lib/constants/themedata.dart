/*
dynamic raw({
  dynamic adaptationMap = adaptationMap,
  dynamic applyElevationOverlayColor = applyElevationOverlayColor,
  dynamic cupertinoOverrideTheme = cupertinoOverrideTheme,
  dynamic extensions = extensions,
  dynamic inputDecorationTheme = inputDecorationTheme,
  dynamic materialTapTargetSize = materialTapTargetSize,
  dynamic pageTransitionsTheme = pageTransitionsTheme,
  dynamic platform = platform,
  dynamic scrollbarTheme = scrollbarTheme,
  dynamic splashFactory = splashFactory,
  dynamic useMaterial3 = useMaterial3,
  dynamic visualDensity = visualDensity,
  dynamic canvasColor = canvasColor,
  dynamic cardColor = cardColor,
  dynamic colorScheme = colorScheme,
  dynamic dialogBackgroundColor = dialogBackgroundColor,
  dynamic disabledColor = disabledColor,
  dynamic dividerColor = dividerColor,
  dynamic focusColor = focusColor,
  dynamic highlightColor = highlightColor,
  dynamic hintColor = hintColor,
  dynamic hoverColor = hoverColor,
  dynamic indicatorColor = indicatorColor,
  dynamic primaryColor = primaryColor,
  dynamic primaryColorDark = primaryColorDark,
  dynamic primaryColorLight = primaryColorLight,
  dynamic scaffoldBackgroundColor = scaffoldBackgroundColor,
  dynamic secondaryHeaderColor = secondaryHeaderColor,
  dynamic shadowColor = shadowColor,
  dynamic splashColor = splashColor,
  dynamic unselectedWidgetColor = unselectedWidgetColor,
  dynamic iconTheme = iconTheme,
  dynamic primaryIconTheme = primaryIconTheme,
  dynamic primaryTextTheme = primaryTextTheme,
  dynamic textTheme = textTheme,
  dynamic typography = typography,
  dynamic actionIconTheme = actionIconTheme,
  dynamic appBarTheme = appBarTheme,
  dynamic badgeTheme = badgeTheme,
  dynamic bannerTheme = bannerTheme,
  dynamic bottomAppBarTheme = bottomAppBarTheme,
  dynamic bottomNavigationBarTheme = bottomNavigationBarTheme,
  dynamic bottomSheetTheme = bottomSheetTheme,
  dynamic buttonBarTheme = buttonBarTheme,
  dynamic buttonTheme = buttonTheme,
  dynamic cardTheme = cardTheme,
  dynamic checkboxTheme = checkboxTheme,
  dynamic chipTheme = chipTheme,
  dynamic dataTableTheme = dataTableTheme,
  dynamic datePickerTheme = datePickerTheme,
  dynamic dialogTheme = dialogTheme,
  dynamic dividerTheme = dividerTheme,
  dynamic drawerTheme = drawerTheme,
  dynamic dropdownMenuTheme = dropdownMenuTheme,
  dynamic elevatedButtonTheme = elevatedButtonTheme,
  dynamic expansionTileTheme = expansionTileTheme,
  dynamic filledButtonTheme = filledButtonTheme,
  dynamic floatingActionButtonTheme = floatingActionButtonTheme,
  dynamic iconButtonTheme = iconButtonTheme,
  dynamic listTileTheme = listTileTheme,
  dynamic menuBarTheme = menuBarTheme,
  dynamic menuButtonTheme = menuButtonTheme,
  dynamic menuTheme = menuTheme,
  dynamic navigationBarTheme = navigationBarTheme,
  dynamic navigationDrawerTheme = navigationDrawerTheme,
  dynamic navigationRailTheme = navigationRailTheme,
  dynamic outlinedButtonTheme = outlinedButtonTheme,
  dynamic popupMenuTheme = popupMenuTheme,
  dynamic progressIndicatorTheme = progressIndicatorTheme,
  dynamic radioTheme = radioTheme,
  dynamic searchBarTheme = searchBarTheme,
  dynamic searchViewTheme = searchViewTheme,
  dynamic segmentedButtonTheme = segmentedButtonTheme,
  dynamic sliderTheme = sliderTheme,
  dynamic snackBarTheme = snackBarTheme,
  dynamic switchTheme = switchTheme,
  dynamic tabBarTheme = tabBarTheme,
  dynamic textButtonTheme = textButtonTheme,
  dynamic textSelectionTheme = textSelectionTheme,
  dynamic timePickerTheme = timePickerTheme,
  dynamic toggleButtonsTheme = toggleButtonsTheme,
  dynamic tooltipTheme = tooltipTheme,
})
*/
import 'package:flutter/material.dart';

ThemeData lightmode = ThemeData(
  colorScheme: ColorScheme.fromSeed(seedColor: Colors.black),
  useMaterial3: true,
  scaffoldBackgroundColor: Colors.black,
);
ThemeData darkmode = ThemeData(
  colorScheme: ColorScheme.fromSeed(seedColor: const Color(0x00F5F5F7)),
  useMaterial3: true,
  scaffoldBackgroundColor: const Color(0x00F5F5F7),
  primaryColor: const Color(0xFF444444),
  appBarTheme: const AppBarTheme(backgroundColor: Color(0x00F5F5F7)),
  textTheme: const TextTheme(
    titleLarge: TextStyle(
      color: Colors.black,
      fontSize: 24,
      fontFamily: 'Pretendard',
    ),
    titleMedium: TextStyle(
      color: Colors.black,
      fontSize: 18,
      fontFamily: 'Pretendard',
    ),
    titleSmall: TextStyle(
      color: Colors.black,
      fontSize: 16,
      fontFamily: 'Pretendard',
    ),
    bodyLarge: TextStyle(
      color: Colors.black,
      fontSize: 18,
      fontFamily: 'Pretendard',
    ),
    bodyMedium: TextStyle(
      color: Colors.black,
      fontSize: 16,
      fontFamily: 'Pretendard',
    ),
    bodySmall: TextStyle(
      color: Colors.black,
      fontSize: 14,
      fontFamily: 'Pretendard',
    ),
    labelLarge: TextStyle(
      color: Colors.black,
      fontSize: 16,
      fontFamily: 'Pretendard',
    ),
    labelMedium: TextStyle(
      color: Color(0XFF019CE9),
      fontSize: 14,
      fontFamily: 'Pretendard',
    ),
    //labelSmall: TextStyle(color: Colors.black, fontSize: 12.sp),
  ),
  buttonTheme: const ButtonThemeData(
    buttonColor: Color(0xFF3562FF),
  ),
  bottomNavigationBarTheme: const BottomNavigationBarThemeData(
    backgroundColor: Color(0x00F5F5F7), // 네비게이션 바의 배경색
    selectedItemColor: Colors.black, // 선택된 아이템의 색상
    unselectedItemColor: Colors.grey, // 선택되지 않은 아이템의 색상
  ),
);
